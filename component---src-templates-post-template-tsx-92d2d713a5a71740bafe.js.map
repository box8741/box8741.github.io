{"version":3,"file":"component---src-templates-post-template-tsx-92d2d713a5a71740bafe.js","mappings":"sNASA,IAAMA,GAAmB,2NAenBC,GAAK,8SAiBLC,GAAQ,oRA4Bd,EAZ2D,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACzE,OACE,QAACL,EAAD,MACE,QAACC,EAAD,KAAQE,IACR,QAACD,EAAD,MACE,mBAAMG,EAAWC,KAAK,SACtB,mBAAMF,MCtDd,IAAMG,GAAkB,cAAH,mBAAG,CAAH,8GAUfC,GAAkB,QAAO,SAACC,GAAD,OAC7B,QAAC,EAAAC,GAAD,UAAiBD,EAAjB,CAAwBE,MAAO,CAAEC,SAAU,iBADrB,qBAAH,kKAwBrB,EATmD,SAAC,GAA2C,IAAzCC,EAAyC,EAAzCA,UAAWV,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC5E,OACE,QAACE,EAAD,MACE,QAACC,EAAD,CAAiBM,MAAOD,EAAWE,IAAI,eACvC,QAAC,EAAD,CAAcZ,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,MCD1D,EAnCsB,SAACW,GACrB,IAAMC,GAA0DC,EAAAA,EAAAA,QAAO,MACvE,GAAgCC,EAAAA,EAAAA,UAAiB,IAA1CC,EAAP,KAAiBC,EAAjB,KACMC,GAA4CJ,EAAAA,EAAAA,QAAO,MA6BzD,OA3BAK,EAAAA,EAAAA,YAAU,WAYR,GAXAN,EAASO,QAAU,IAAIC,sBACrB,SAAAC,GACEA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRR,EAAYO,EAAME,OAAOC,SAI/B,CAAEC,WAAW,kBAGU,OAArBf,EAASO,QAOb,OALAR,EAAQW,SAAQ,SAAAI,GAAO,IAAD,EACpBT,EAAQE,QAAUS,SAASC,eAAeH,GACtCT,EAAQE,UAAS,UAAAP,EAASO,eAAT,SAAkBW,QAAQb,EAAQE,aAGlD,WACLR,EAAQW,SAAQ,SAAAI,GAAO,IAAD,EACpBT,EAAQE,QAAUS,SAASC,eAAeH,GACtCT,EAAQE,UAAS,UAAAP,EAASO,eAAT,SAAkBY,UAAUd,EAAQE,gBAG5D,IAEIJ,GC1BT,IAAMiB,GAAU,sJAUVC,GAAU,mQAqBF,qBAAGlB,WArBD,mDAoDhB,EAxBqD,SAAC,GAAa,IAAXmB,EAAU,EAAVA,IAChDC,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,GAAwB,oBAAbR,SAA0B,MAAO,GAC5C,IAAMS,EAAWT,SAASU,cAAc,QACxCD,EAASE,UAAYL,EACrB,IAAMM,EAAcH,EAASI,iBAAT,KAEdC,EAAgB,GAKtB,OAJAF,EAAYlB,SAAQ,SAAAqB,GAClBD,EAAIE,KAAKC,UAAUF,EAAEG,KAAKC,QAAQ,IAAK,SAGlCL,IACN,IAEG3B,EAAWiC,EAAcb,GAE/B,OACE,QAACH,EAAD,MACE,QAACC,EAAD,CAAYlB,SAAUkC,UAAUlC,GAAWmC,wBAAyB,CAAEC,OAAQjB,OCxDpF,IAAMkB,GAAc,cAAH,mBAAG,CAAH,2FASXC,GAAqB,cAAH,mBAAG,CAAH,4JAWlBC,GAAmB,cAAH,mBAAG,CAAH,goCAiJtB,EAXyD,YAAqC,IAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,gBACzE,OACE,QAACJ,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,CAAkBJ,wBAAyB,CAAEC,OAAQI,MACrD,QAAC,EAAD,CAAiBrB,IAAKsB,OChK9B,IAAMC,GAAoB,0LAYpBC,GAAU,OAAOC,EAAAA,EAAP,sBAAH,oDAKPC,GAAI,sKAWJC,GAAgB,wHAMhBC,GAAc,iHAMdC,GAAoB,6EAIpBC,GAAgB,0FAmBtB,EAd6D,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC9D,OACE,QAACR,EAAD,MACE,QAACC,EAAD,CAASjD,MAAOwD,EAAcvD,IAAI,mBAClC,QAACkD,EAAD,OACA,QAACC,EAAD,MACE,QAACC,EAAD,4BACA,QAACC,EAAD,gDACA,QAACC,EAAD,8BC9DR,IAaME,GAAgB,uGAkCtB,EA5ByC,WACvC,IAAMC,GAAUC,EAAAA,EAAAA,aAwBhB,OAtBAlD,EAAAA,EAAAA,YAAU,WACR,GAAwB,OAApBiD,EAAQhD,QAAZ,CAEA,IAAMkD,EAAgCzC,SAASU,cAAc,UAEvDgC,EAAuC,CAC3CC,IA5BM,gCA6BNC,KA5BO,4BA6BP,aAAc,QACdC,MAAO,UACPC,MAAM,eACNC,YAAa,YACbC,MAAO,QAGTC,OAAOxD,QAAQiD,GAAYhD,SAAQ,YAAmB,IAAjBwD,EAAgB,KAAXC,EAAW,KACnDV,EAAWW,aAAaF,EAAKC,MAG/BZ,EAAQhD,QAAQ8D,YAAYZ,MAC3B,KAEI,QAACH,EAAD,CAAkBgB,IAAKf,K,UC/BhC,IAAMgB,GAAkB,0QAelBC,GAAkB,OAAOC,EAAAA,GAAP,qBAAH,uPAmBfC,GAAQ,2EAIRC,GAAS,kLAgCf,EAvByD,SAAC,GAAqC,IAAD,IAAlCC,YAAeC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KAC/E,OACE,QAACP,EAAD,KACGM,GACC,QAACL,EAAD,CAAiBO,GAAIF,EAAKG,OAAOC,OAC/B,QAACP,EAAD,gBACA,QAACC,EAAD,KAAYE,EAAKK,YAAYhG,SAG/B,oBAED4F,GACC,QAACN,EAAD,CAAiBO,GAAID,EAAKE,OAAOC,OAC/B,QAACP,EAAD,gBACA,QAACC,EAAD,KAAYG,EAAKI,YAAYhG,SAG/B,sBCNR,EAtC2D,SAAC,GAStD,QARJiG,KACuBC,EAOnB,EAPFC,kBAAqBD,MAEA/B,EAKnB,EANFiC,KACEC,gBAAmBlC,aAGvBuB,EAEI,EAFJA,YACYY,EACR,EADJC,SAAYD,KAEZ,EAeIJ,EAAM,GAdRM,KACE/C,EAFJ,EAEIA,KACAC,EAHJ,EAGIA,gBAHJ,IAIIsC,YACEhG,EALN,EAKMA,MACAyG,EANN,EAMMA,QACAxG,EAPN,EAOMA,KACAC,EARN,EAQMA,WARN,IASMQ,UACqBgG,EAV3B,EAUQL,gBAAmBK,gBACnBC,EAXR,EAWQA,UAMR,OACE,QAACC,EAAA,EAAD,CAAQ5G,MAAOA,EAAO6G,YAAaJ,EAASK,IAAKR,EAAM3F,MAAOgG,IAC5D,QAAC,EAAD,CAAU3G,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,EAAYQ,UAAWgG,KACvE,QAAC,EAAD,CAAajD,KAAMA,EAAMC,gBAAiBA,KAC1C,QAAC,EAAD,CAAeS,aAAcA,KAC7B,QAAC,EAAD,CAAauB,YAAaA,KAC1B,QAAC,EAAD","sources":["webpack://min-blog/./src/components/Post/PostHeadInfo.tsx","webpack://min-blog/./src/components/Post/PostHead.tsx","webpack://min-blog/./src/hooks/useActiveHash.tsx","webpack://min-blog/./src/components/Post/TableOfContents.tsx","webpack://min-blog/./src/components/Post/PostContent.tsx","webpack://min-blog/./src/components/Post/ProfileWidget.tsx","webpack://min-blog/./src/components/Post/CommonWidget.tsx","webpack://min-blog/./src/components/Post/AnotherPage.tsx","webpack://min-blog/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string\r\n  date: string\r\n  categories: string[]\r\n}\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 60px 0;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 40px 20px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 45px;\r\n  font-weight: 800;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`\r\n\r\nconst PostData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    font-size: 15px;\r\n    font-weight: 400px;\r\n  }\r\n`\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = ({ title, date, categories }) => {\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <Title>{title}</Title>\r\n      <PostData>\r\n        <div>{categories.join(' / ')}</div>\r\n        <div>{date}</div>\r\n      </PostData>\r\n    </PostHeadInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeadInfo\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData, GatsbyImageProps } from 'gatsby-plugin-image'\r\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n  thumbnail: IGatsbyImageData\r\n}\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst BackgroundImage = styled((props: GatsbyImageProps) => (\r\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\r\n))`\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 400px;\r\n  object-fit: cover;\r\n  filter: brightness(0.25);\r\n  background: #333333;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = ({ thumbnail, title, date, categories }) => {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\r\n      <PostHeadInfo title={title} date={date} categories={categories} />\r\n    </PostHeadWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHead\r\n","import { MutableRefObject, useEffect, useRef, useState } from 'react'\r\n\r\nconst useActiveHash = (itemIds: string[]) => {\r\n  const observer: MutableRefObject<IntersectionObserver | null> = useRef(null)\r\n  const [activeId, setActiveId] = useState<string>('')\r\n  const tempRef: MutableRefObject<Element | null> = useRef(null)\r\n\r\n  useEffect(() => {\r\n    observer.current = new IntersectionObserver(\r\n      entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            setActiveId(entry.target.id)\r\n          }\r\n        })\r\n      },\r\n      { rootMargin: `0% 0% -90% 0%` },\r\n    )\r\n\r\n    if (observer.current === null) return\r\n\r\n    itemIds.forEach(id => {\r\n      tempRef.current = document.getElementById(id)\r\n      if (tempRef.current) observer.current?.observe(tempRef.current)\r\n    })\r\n\r\n    return () => {\r\n      itemIds.forEach(id => {\r\n        tempRef.current = document.getElementById(id)\r\n        if (tempRef.current) observer.current?.unobserve(tempRef.current)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return activeId\r\n}\r\n\r\nexport default useActiveHash\r\n","import React, { FunctionComponent, useMemo } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport useActiveHash from 'hooks/useActiveHash'\r\n\r\ntype TOCProps = {\r\n  toc: string\r\n}\r\n\r\nconst TOCWrapper = styled.div`\r\n  position: relative;\r\n  width: 250px;\r\n  margin-left: 60px;\r\n\r\n  @media (max-width: 1410px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst TOCContent = styled.div<{ activeId: string }>`\r\n  position: sticky;\r\n  top: 200px;\r\n  border-left: 2px solid #aaaaaa;\r\n  border-radius: 10px;\r\n  padding: 12px;\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  p + ul {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  a {\r\n    color: #888888;\r\n    font-size: 14px;\r\n    transition: color 0.2s ease, font-size 0.2s ease;\r\n  }\r\n\r\n  a[href$='#${({ activeId }) => activeId}'] {\r\n    color: black;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nconst TableOfContents: FunctionComponent<TOCProps> = ({ toc }) => {\r\n  const targetedIds = useMemo(() => {\r\n    if (typeof document === 'undefined') return []\r\n    const dummyDOM = document.createElement('html')\r\n    dummyDOM.innerHTML = toc\r\n    const justAnchors = dummyDOM.querySelectorAll(`a`)\r\n\r\n    const val: string[] = []\r\n    justAnchors.forEach(a => {\r\n      val.push(decodeURI(a.hash.replace('#', '')))\r\n    })\r\n\r\n    return val\r\n  }, [])\r\n\r\n  const activeId = useActiveHash(targetedIds)\r\n\r\n  return (\r\n    <TOCWrapper>\r\n      <TOCContent activeId={encodeURI(activeId)} dangerouslySetInnerHTML={{ __html: toc }} />\r\n    </TOCWrapper>\r\n  )\r\n}\r\n\r\nexport default TableOfContents\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport TableOfContents from 'components/Post/TableOfContents'\r\n\r\ninterface PostContentProps {\r\n  html: string\r\n  tableOfContents: string\r\n}\r\n\r\nconst PostWrapper = styled.div`\r\n  width: 768px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst PostContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 768px 250px;\r\n  margin: 80px 0;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    margin: 40px 0;\r\n  }\r\n`\r\n\r\nconst MarkdownRenderer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  word-break: break-all;\r\n\r\n  line-height: 1.8;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n\r\n  p {\r\n    padding: 3px 0;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3 {\r\n    font-weight: 800;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 80px;\r\n    margin-bottom: 30px;\r\n  }\r\n  h2,\r\n  h3 {\r\n    margin-top: 40px;\r\n  }\r\n\r\n  h1 + h3 {\r\n    margin-top: 0;\r\n  }\r\n  h1 + h2 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  hr + h1,\r\n  hr + h2,\r\n  hr + h3 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 30px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 25px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  blockquote {\r\n    margin: 30px 0;\r\n    padding: 5px 15px;\r\n    border-left: 2px solid #000000;\r\n    font-weight: 800;\r\n  }\r\n\r\n  ol,\r\n  ul {\r\n    margin-left: 20px;\r\n    padding: 30px 0;\r\n  }\r\n\r\n  hr {\r\n    border: 1px solid #000000;\r\n    margin: 100px 0;\r\n  }\r\n\r\n  a {\r\n    color: #4263eb;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  a > picture {\r\n    margin: 60px 0;\r\n  }\r\n\r\n  pre[class*='language-'] {\r\n    margin: 30px 0;\r\n    padding: 15px;\r\n    font-size: 15px;\r\n    border-radius: 6px;\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background: rgba(255, 255, 255, 0.5);\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n\r\n  p:not(pre) > code[class='language-text'] {\r\n    font-size: 14px;\r\n    background: rgba(0, 0, 0, 0.04);\r\n    color: #e91e63;\r\n    padding: 3px 5px;\r\n  }\r\n\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    tab-size: 2;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 80px 20px;\r\n    line-height: 1.6;\r\n    font-size: 14px;\r\n\r\n    h1 {\r\n      font-size: 23px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 20px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 17px;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    hr {\r\n      margin: 50px 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html, tableOfContents }) {\r\n  return (\r\n    <PostWrapper>\r\n      <PostContentWrapper>\r\n        <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n        <TableOfContents toc={tableOfContents} />\r\n      </PostContentWrapper>\r\n    </PostWrapper>\r\n  )\r\n}\r\n\r\nexport default PostContent\r\n","import React, { FunctionComponent } from 'react'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport styled from '@emotion/styled'\r\n\r\ntype ProfileWidgetProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileWidgetWrapper = styled.div`\r\n  display: flex;\r\n  width: 768px;\r\n  margin: 0 auto 20px auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst Profile = styled(GatsbyImage)`\r\n  width: 140px;\r\n  height: 140px;\r\n`\r\n\r\nconst Line = styled.span`\r\n  height: 90px;\r\n  width: 1px;\r\n  background: #cccccc;\r\n  margin: 0 24px 0 12px;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst IntroduceWRapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst IntroduceTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst IntroduceDescription = styled.div`\r\n  font-size: 16px;\r\n`\r\n\r\nconst IntroduceDevelop = styled.div`\r\n  font-size: 14px;\r\n  color: #aaaaaa;\r\n`\r\n\r\nconst ProfileWidget: FunctionComponent<ProfileWidgetProps> = ({ profileImage }) => {\r\n  return (\r\n    <ProfileWidgetWrapper>\r\n      <Profile image={profileImage} alt=\"Profile image\" />\r\n      <Line />\r\n      <IntroduceWRapper>\r\n        <IntroduceTitle>안녕하세요 개발자 Min 입니다.</IntroduceTitle>\r\n        <IntroduceDescription>개발자들 사이에서 한 번쯤 들어봤을 만한 사람이 되는 게 목표입니다.</IntroduceDescription>\r\n        <IntroduceDevelop>Frontend Developer</IntroduceDevelop>\r\n      </IntroduceWRapper>\r\n    </ProfileWidgetWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileWidget\r\n","import React, { createRef, FunctionComponent, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst repo = 'box8741/box8741.github.io'\r\n\r\ntype UtterancesAttributesType = {\r\n  src: string\r\n  repo: string\r\n  'issue-term': string\r\n  label: string\r\n  theme: string\r\n  crossorigin: string\r\n  async: string\r\n}\r\n\r\nconst UtteranceWrapper = styled.div`\r\n  @media (max-width: 768px) {\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst CommentWidget: FunctionComponent = () => {\r\n  const element = createRef<HTMLDivElement>()\r\n\r\n  useEffect(() => {\r\n    if (element.current === null) return\r\n\r\n    const utterances: HTMLScriptElement = document.createElement('script')\r\n\r\n    const attributes: UtterancesAttributesType = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'title',\r\n      label: 'Comment',\r\n      theme: `github-light`,\r\n      crossorigin: 'anonymous',\r\n      async: 'true',\r\n    }\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value)\r\n    })\r\n\r\n    element.current.appendChild(utterances)\r\n  }, [])\r\n\r\n  return <UtteranceWrapper ref={element} />\r\n}\r\n\r\nexport default CommentWidget\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\ntype AnotherPageProps = {\r\n  pageContext: {\r\n    prev: PageContextItemType\r\n    next: PageContextItemType\r\n  }\r\n}\r\n\r\nexport type PageContextItemType = {\r\n  fields: { slug: string }\r\n  frontmatter: { title: string }\r\n}\r\n\r\nconst AnotherPageWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 40px;\r\n  width: 768px;\r\n  margin: 0 auto 36px auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    grid-template-columns: 1fr;\r\n    padding: 0 20px;\r\n    grid-column-gap: 0;\r\n  }\r\n`\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  border: 1px solid #cccccc;\r\n  border-radius: 6px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  transition: box-shadow 0.2s ease;\r\n\r\n  &:hover {\r\n    box-shadow: 4px 4px 8px #cccccc;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-bottom: 12px;\r\n    &:last-of-type {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostText = styled.div`\r\n  font-size: 12px;\r\n`\r\n\r\nconst PostTitle = styled.div`\r\n  display: -webkit-box;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical;\r\n`\r\n\r\nconst AnotherPage: FunctionComponent<AnotherPageProps> = ({ pageContext: { prev, next } }) => {\r\n  return (\r\n    <AnotherPageWrapper>\r\n      {prev ? (\r\n        <PostItemWrapper to={prev.fields.slug}>\r\n          <PostText>이전 포스트</PostText>\r\n          <PostTitle>{prev.frontmatter.title}</PostTitle>\r\n        </PostItemWrapper>\r\n      ) : (\r\n        <div />\r\n      )}\r\n      {next ? (\r\n        <PostItemWrapper to={next.fields.slug}>\r\n          <PostText>다음 포스트</PostText>\r\n          <PostTitle>{next.frontmatter.title}</PostTitle>\r\n        </PostItemWrapper>\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </AnotherPageWrapper>\r\n  )\r\n}\r\n\r\nexport default AnotherPage\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql, PageProps } from 'gatsby'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport Layout from 'components/Common/Layout'\r\nimport PostHead from 'components/Post/PostHead'\r\nimport PostContent from 'components/Post/PostContent'\r\nimport ProfileWidget from 'components/Post/ProfileWidget'\r\nimport CommentWidget from 'components/Post/CommonWidget'\r\nimport AnotherPage, { PageContextItemType } from 'components/Post/AnotherPage'\r\n\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\n\r\nexport type PostPageItemType = {\r\n  node: {\r\n    html: string\r\n    tableOfContents: string\r\n    frontmatter: PostFrontmatterType\r\n  }\r\n}\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: { profileImage: IGatsbyImageData }\r\n    }\r\n  }\r\n  location: PageProps['location']\r\n  pageContext: {\r\n    prev: PageContextItemType\r\n    next: PageContextItemType\r\n  }\r\n}\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { profileImage },\r\n    },\r\n  },\r\n  pageContext,\r\n  location: { href },\r\n}) => {\r\n  const {\r\n    node: {\r\n      html,\r\n      tableOfContents,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        categories,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n      },\r\n    },\r\n  } = edges[0]\r\n\r\n  return (\r\n    <Layout title={title} description={summary} url={href} image={publicURL}>\r\n      <PostHead title={title} date={date} categories={categories} thumbnail={gatsbyImageData} />\r\n      <PostContent html={html} tableOfContents={tableOfContents} />\r\n      <ProfileWidget profileImage={profileImage} />\r\n      <AnotherPage pageContext={pageContext} />\r\n      <CommentWidget />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        profileImage: gatsbyImageData(width: 140, height: 140)\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["PostHeadInfoWrapper","Title","PostData","title","date","categories","join","PostHeadWrapper","BackgroundImage","props","G","style","position","thumbnail","image","alt","itemIds","observer","useRef","useState","activeId","setActiveId","tempRef","useEffect","current","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","rootMargin","document","getElementById","observe","unobserve","TOCWrapper","TOCContent","toc","targetedIds","useMemo","dummyDOM","createElement","innerHTML","justAnchors","querySelectorAll","val","a","push","decodeURI","hash","replace","useActiveHash","encodeURI","dangerouslySetInnerHTML","__html","PostWrapper","PostContentWrapper","MarkdownRenderer","html","tableOfContents","ProfileWidgetWrapper","Profile","GatsbyImage","Line","IntroduceWRapper","IntroduceTitle","IntroduceDescription","IntroduceDevelop","profileImage","UtteranceWrapper","element","createRef","utterances","attributes","src","repo","label","theme","crossorigin","async","Object","key","value","setAttribute","appendChild","ref","AnotherPageWrapper","PostItemWrapper","Link","PostText","PostTitle","pageContext","prev","next","to","fields","slug","frontmatter","data","edges","allMarkdownRemark","file","childImageSharp","href","location","node","summary","gatsbyImageData","publicURL","Layout","description","url"],"sourceRoot":""}