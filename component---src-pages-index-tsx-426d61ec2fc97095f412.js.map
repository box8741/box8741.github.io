{"version":3,"file":"component---src-pages-index-tsx-426d61ec2fc97095f412.js","mappings":"8NAQA,IAAMA,GAAsB,OAAOC,EAAAA,EAAP,sBAAH,2HAgBzB,EAJ2D,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5D,OAAO,QAACF,EAAD,CAAqBG,MAAOD,EAAcE,IAAI,mBCZvD,IAAMC,GAAmB,uMAanBC,GAAQ,2JAURC,GAAK,0KAuBX,EAZ2D,SAAC,GAAsB,IAApBL,EAAmB,EAAnBA,aAC5D,OACE,QAACG,EAAD,MACE,QAAC,EAAD,CAAcH,aAAcA,KAC5B,oBACE,QAACK,EAAD,4BACA,QAACD,EAAD,kD,oBCtCR,IAAME,GAAyB,OAAOC,EAAAA,GAAP,mBAAH,kPAkBtBC,GAAY,OAAOT,EAAAA,EAAP,mBAAH,kDAKTU,GAAe,qHAMfJ,GAAK,6OAcLK,GAAQ,sFAKRC,GAAY,yMAiClB,EAvBiE,SAAC,GAO3D,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,WAEqBC,EAGjB,EAJJC,UACEC,gBAAmBF,gBAErBG,EACI,EADJA,KAEA,OACE,QAACX,EAAD,CAAwBY,GAAID,IAC1B,QAACT,EAAD,CAAWP,MAAOa,EAAiBZ,IAAI,qBACvC,QAACO,EAAD,MACE,QAAC,EAAD,KAAQG,IACR,QAACF,EAAD,KACGG,EAAWM,KAAI,SAAAC,GAAQ,OACtB,QAACT,EAAD,CAAcU,IAAKD,GAAWA,UCzE1C,IAAME,GAAsB,sGAKtBC,GAAsB,iLAYtBC,GAAO,OAAOjB,EAAAA,GAAP,sBAAH,yJAYJkB,GAAY,iHA4BlB,EAtBiE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClE,OACE,QAACJ,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,CAAMN,GAAG,SAAT,SACA,QAACO,EAAD,yBACCC,EAAMP,KACL,oBACEQ,KACEC,EAFJ,EAEIA,GACUC,EAHd,EAGIC,OAAUD,KACVE,EAJJ,EAIIA,YAJJ,OAOE,QAAC,GAAD,UAAqBA,EAArB,CAAkCV,IAAKO,EAAIX,KAAMY,WCf7D,EApBqD,SAAC,GAQ/C,IAAD,IAPJG,KACuBC,EAMnB,EANFC,kBAAqBD,MAMnB,IALFE,KACqBrB,EAInB,EAJAE,gBAAmBF,gBACnBsB,EAGA,EAHAA,UAIJ,GAAwCC,EAAAA,EAAAA,KAAhCzB,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,QAC5B,OACE,QAACC,EAAA,EAAD,CAAQ5B,MAAOA,EAAO0B,YAAaA,EAAaG,IAAKF,EAAStC,MAAOmC,IACnE,QAACM,EAAA,EAAD,MACE,QAAC,EAAD,CAAc1C,aAAcc,KAC5B,QAAC,EAAD,CAAiBY,MAAOO","sources":["webpack://min-blog/./src/components/Main/ProfileImage.tsx","webpack://min-blog/./src/components/Main/Introduction.tsx","webpack://min-blog/./src/components/Main/PreviewPostItem.tsx","webpack://min-blog/./src/components/Main/PreviewPostList.tsx","webpack://min-blog/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 160px;\n  height: 160px;\n  /* border-radius: 50%; */\n  margin-right: 32px;\n\n  @media (max-width: 768px) {\n    width: 160px;\n    height: 160px;\n  }\n`\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = ({ profileImage }) => {\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\n}\n\nexport default ProfileImage\n","import React, { FunctionComponent } from 'react'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport styled from '@emotion/styled'\nimport ProfileImage from 'components/Main/ProfileImage'\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst IntroductionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 768px;\n  margin: 40px auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n    padding: 0 20px;\n  }\n`\n\nconst SubTitle = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  word-break: keep-all;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 30px;\n  font-weight: 700;\n  word-break: keep-all;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`\n\nconst Introduction: FunctionComponent<IntroductionProps> = ({ profileImage }) => {\n  return (\n    <IntroductionWrapper>\n      <ProfileImage profileImage={profileImage} />\n      <div>\n        <Title>ÏïàÎÖïÌïòÏÑ∏Ïöî Í∞úÎ∞úÏûê Min ÏûÖÎãàÎã§.</Title>\n        <SubTitle>Í∞úÎ∞úÏûêÎì§ ÏÇ¨Ïù¥ÏóêÏÑú Ìïú Î≤àÏØ§ Îì§Ïñ¥Î¥§ÏùÑ ÎßåÌïú ÏÇ¨ÎûåÏù¥ ÎêòÎäî Í≤å Î™©ÌëúÏûÖÎãàÎã§.</SubTitle>\n      </div>\n    </IntroductionWrapper>\n  )\n}\n\nexport default Introduction\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport { PostFrontmatterType } from 'types/PostItem.types'\n\ntype PreviewPostItemProps = PostFrontmatterType & {\n  link: string\n}\n\nconst PreviewPostItemWrapper = styled(Link)`\n  display: grid;\n  grid-template-columns: 80px 1fr;\n  grid-gap: 12px;\n  margin-bottom: 16px;\n  padding: 16px;\n  border-radius: 6px;\n  background: var(--bg);\n  box-shadow: var(--shadow-default);\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n  &:hover {\n    opacity: 0.7;\n  }\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  width: 65px;\n  height: 65px;\n`\n\nconst PostItemContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  overflow: hidden;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst CategoryItem = styled.div`\n  font-weight: bold;\n  font-size: 14px;\n  color: var(--font-gray);\n  padding: 2px 6px;\n  border-radius: 50px;\n  margin-right: 12px;\n  box-shadow: var(--shadow-disabled);\n`\n\nconst PreviewPostItem: FunctionComponent<PreviewPostItemProps> = ({\n  title,\n  categories,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) => {\n  return (\n    <PreviewPostItemWrapper to={link}>\n      <Thumbnail image={gatsbyImageData} alt=\"thumbnail image\" />\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n      </PostItemContent>\n    </PreviewPostItemWrapper>\n  )\n}\n\nexport default PreviewPostItem\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport PreviewPostItem from 'components/Main/PreviewPostItem'\n\nimport { PostListItemType } from 'types/PostItem.types'\n\ntype PreviewPostListProps = {\n  posts: PostListItemType[]\n}\n\nconst PreviewPostListWrapper = styled.div`\n  background: var(--bg-gray);\n  padding: 40px 0;\n`\n\nconst PreviewPostListContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0 20px;\n  }\n`\n\nconst Blog = styled(Link)`\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  margin: 30px 0 60px 0;\n  color: var(--font-gray);\n\n  &:hover {\n    color: var(--font-gray);\n  }\n`\n\nconst PreviewTitle = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`\n\nconst PreviewPostList: FunctionComponent<PreviewPostListProps> = ({ posts }) => {\n  return (\n    <PreviewPostListWrapper>\n      <PreviewPostListContent>\n        <Blog to=\"/blog\">Blog</Blog>\n        <PreviewTitle>ü§î Preview Posts</PreviewTitle>\n        {posts.map(\n          ({\n            node: {\n              id,\n              fields: { slug },\n              frontmatter,\n            },\n          }) => (\n            <PreviewPostItem {...frontmatter} key={id} link={slug} />\n          ),\n        )}\n      </PreviewPostListContent>\n    </PreviewPostListWrapper>\n  )\n}\n\nexport default PreviewPostList\n","import React, { FunctionComponent } from 'react'\nimport { graphql, PageProps } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport Layout from 'components/Common/Layout'\nimport PageTemplate from 'components/Common/PageTemplate'\nimport Introduction from 'components/Main/Introduction'\nimport PreviewPostList from 'components/Main/PreviewPostList'\n\nimport { PostListItemType } from 'types/PostItem.types'\n\ntype IndexPageProps = PageProps & {\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) => {\n  const { title, description, siteUrl } = useSiteMetadata()\n  return (\n    <Layout title={title} description={description} url={siteUrl} image={publicURL}>\n      <PageTemplate>\n        <Introduction profileImage={gatsbyImageData} />\n        <PreviewPostList posts={edges} />\n      </PageTemplate>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const getIndexData = graphql`\n  query getIndexData {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }, limit: 5) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(transformOptions: { fit: OUTSIDE }, width: 65, height: 65)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 160, height: 160)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["ProfileImageWrapper","GatsbyImage","profileImage","image","alt","IntroductionWrapper","SubTitle","Title","PreviewPostItemWrapper","Link","Thumbnail","PostItemContent","Category","CategoryItem","title","categories","gatsbyImageData","thumbnail","childImageSharp","link","to","map","category","key","PreviewPostListWrapper","PreviewPostListContent","Blog","PreviewTitle","posts","node","id","slug","fields","frontmatter","data","edges","allMarkdownRemark","file","publicURL","useSiteMetadata","description","siteUrl","Layout","url","PageTemplate"],"sourceRoot":""}