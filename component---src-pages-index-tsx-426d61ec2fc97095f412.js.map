{"version":3,"file":"component---src-pages-index-tsx-426d61ec2fc97095f412.js","mappings":"8NAQA,IAAMA,GAAsB,OAAOC,EAAAA,EAAP,sBAAH,2HAgBzB,EAJ2D,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5D,OAAO,QAACF,EAAD,CAAqBG,MAAOD,EAAcE,IAAI,mBCZvD,IAAMC,GAAmB,uMAanBC,GAAQ,2JAURC,GAAK,0KAuBX,EAZ2D,SAAC,GAAsB,IAApBL,EAAmB,EAAnBA,aAC5D,OACE,QAACG,EAAD,MACE,QAAC,EAAD,CAAcH,aAAcA,KAC5B,oBACE,QAACK,EAAD,4BACA,QAACD,EAAD,kD,oBCtCR,IAAME,GAAyB,OAAOC,EAAAA,GAAP,mBAAH,kPAkBtBC,GAAY,OAAOT,EAAAA,EAAP,mBAAH,kDAKTU,GAAkB,cAAH,iBAAG,CAAH,qFAMfJ,GAAQ,cAAH,iBAAG,CAAH,6MAcLK,GAAW,cAAH,iBAAG,CAAH,sDAKRC,GAAe,cAAH,iBAAG,CAAH,yKAiClB,EAvBiE,SAAC,GAO5D,IANJC,EAMI,EANJA,MACAC,EAKI,EALJA,WAEqBC,EAGjB,EAJJC,UACEC,gBAAmBF,gBAErBG,EACI,EADJA,KAEA,OACE,QAACX,EAAD,CAAwBY,GAAID,IAC1B,QAACT,EAAD,CAAWP,MAAOa,EAAiBZ,IAAI,qBACvC,QAACO,EAAD,MACE,QAAC,EAAD,KAAQG,IACR,QAACF,EAAD,KACGG,EAAWM,KAAI,SAAAC,GAAQ,OACtB,QAACT,EAAD,CAAcU,IAAKD,GAAWA,UCzE1C,IAAME,GAAyB,cAAH,oBAAG,CAAH,mEAKtBC,GAAyB,cAAH,oBAAG,CAAH,8IAYtBC,GAAO,OAAOjB,EAAAA,GAAP,sBAAH,yJAYJkB,GAAe,cAAH,oBAAG,CAAH,8EA4BlB,EAtBiE,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAClE,OACE,QAACJ,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,CAAMN,GAAG,SAAT,SACA,QAACO,EAAD,yBACCC,EAAMP,KACL,oBACEQ,KACEC,EAFJ,EAEIA,GACUC,EAHd,EAGIC,OAAUD,KACVE,EAJJ,EAIIA,YAJJ,OAOE,QAAC,GAAD,UAAqBA,EAArB,CAAkCV,IAAKO,EAAIX,KAAMY,WCf7D,EApBqD,SAAC,GAQhD,QAPJG,KACuBC,EAMnB,EANFC,kBAAqBD,MAMnB,IALFE,KACqBrB,EAInB,EAJAE,gBAAmBF,gBACnBsB,EAGA,EAHAA,UAIJ,GAAwCC,EAAAA,EAAAA,KAAhCzB,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,QAC5B,OACE,QAACC,EAAA,EAAD,CAAQ5B,MAAOA,EAAO0B,YAAaA,EAAaG,IAAKF,EAAStC,MAAOmC,IACnE,QAACM,EAAA,EAAD,MACE,QAAC,EAAD,CAAc1C,aAAcc,KAC5B,QAAC,EAAD,CAAiBY,MAAOO","sources":["webpack://min-blog/./src/components/Main/ProfileImage.tsx","webpack://min-blog/./src/components/Main/Introduction.tsx","webpack://min-blog/./src/components/Main/PreviewPostItem.tsx","webpack://min-blog/./src/components/Main/PreviewPostList.tsx","webpack://min-blog/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\ntype ProfileImageProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 160px;\r\n  height: 160px;\r\n  /* border-radius: 50%; */\r\n  margin-right: 32px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 160px;\r\n    height: 160px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = ({ profileImage }) => {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage\r\n","import React, { FunctionComponent } from 'react'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport styled from '@emotion/styled'\r\nimport ProfileImage from 'components/Main/ProfileImage'\r\n\r\ntype IntroductionProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst IntroductionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 768px;\r\n  margin: 40px auto;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  word-break: keep-all;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-top: 5px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  word-break: keep-all;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = ({ profileImage }) => {\r\n  return (\r\n    <IntroductionWrapper>\r\n      <ProfileImage profileImage={profileImage} />\r\n      <div>\r\n        <Title>ÏïàÎÖïÌïòÏÑ∏Ïöî Í∞úÎ∞úÏûê Min ÏûÖÎãàÎã§.</Title>\r\n        <SubTitle>Í∞úÎ∞úÏûêÎì§ ÏÇ¨Ïù¥ÏóêÏÑú Ìïú Î≤àÏØ§ Îì§Ïñ¥Î¥§ÏùÑ ÎßåÌïú ÏÇ¨ÎûåÏù¥ ÎêòÎäî Í≤å Î™©ÌëúÏûÖÎãàÎã§.</SubTitle>\r\n      </div>\r\n    </IntroductionWrapper>\r\n  )\r\n}\r\n\r\nexport default Introduction\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\n\r\ntype PreviewPostItemProps = PostFrontmatterType & {\r\n  link: string\r\n}\r\n\r\nconst PreviewPostItemWrapper = styled(Link)`\r\n  display: grid;\r\n  grid-template-columns: 80px 1fr;\r\n  grid-gap: 12px;\r\n  margin-bottom: 16px;\r\n  padding: 16px;\r\n  border-radius: 6px;\r\n  background: var(--bg);\r\n  box-shadow: var(--shadow-default);\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst Thumbnail = styled(GatsbyImage)`\r\n  width: 65px;\r\n  height: 65px;\r\n`\r\n\r\nconst PostItemContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  overflow: hidden;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst Category = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst CategoryItem = styled.div`\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: var(--font-gray);\r\n  padding: 2px 6px;\r\n  border-radius: 50px;\r\n  margin-right: 12px;\r\n  box-shadow: var(--shadow-disabled);\r\n`\r\n\r\nconst PreviewPostItem: FunctionComponent<PreviewPostItemProps> = ({\r\n  title,\r\n  categories,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}) => {\r\n  return (\r\n    <PreviewPostItemWrapper to={link}>\r\n      <Thumbnail image={gatsbyImageData} alt=\"thumbnail image\" />\r\n      <PostItemContent>\r\n        <Title>{title}</Title>\r\n        <Category>\r\n          {categories.map(category => (\r\n            <CategoryItem key={category}>{category}</CategoryItem>\r\n          ))}\r\n        </Category>\r\n      </PostItemContent>\r\n    </PreviewPostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PreviewPostItem\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport PreviewPostItem from 'components/Main/PreviewPostItem'\r\n\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\ntype PreviewPostListProps = {\r\n  posts: PostListItemType[]\r\n}\r\n\r\nconst PreviewPostListWrapper = styled.div`\r\n  background: var(--bg-gray);\r\n  padding: 40px 0;\r\n`\r\n\r\nconst PreviewPostListContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst Blog = styled(Link)`\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin: 30px 0 60px 0;\r\n  color: var(--font-gray);\r\n\r\n  &:hover {\r\n    color: var(--font-gray);\r\n  }\r\n`\r\n\r\nconst PreviewTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst PreviewPostList: FunctionComponent<PreviewPostListProps> = ({ posts }) => {\r\n  return (\r\n    <PreviewPostListWrapper>\r\n      <PreviewPostListContent>\r\n        <Blog to=\"/blog\">Blog</Blog>\r\n        <PreviewTitle>ü§î Preview Posts</PreviewTitle>\r\n        {posts.map(\r\n          ({\r\n            node: {\r\n              id,\r\n              fields: { slug },\r\n              frontmatter,\r\n            },\r\n          }) => (\r\n            <PreviewPostItem {...frontmatter} key={id} link={slug} />\r\n          ),\r\n        )}\r\n      </PreviewPostListContent>\r\n    </PreviewPostListWrapper>\r\n  )\r\n}\r\n\r\nexport default PreviewPostList\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql, PageProps } from 'gatsby'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\r\nimport Layout from 'components/Common/Layout'\r\nimport PageTemplate from 'components/Common/PageTemplate'\r\nimport Introduction from 'components/Main/Introduction'\r\nimport PreviewPostList from 'components/Main/PreviewPostList'\r\n\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\ntype IndexPageProps = PageProps & {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n      publicURL,\r\n    },\r\n  },\r\n}) => {\r\n  const { title, description, siteUrl } = useSiteMetadata()\r\n  return (\r\n    <Layout title={title} description={description} url={siteUrl} image={publicURL}>\r\n      <PageTemplate>\r\n        <Introduction profileImage={gatsbyImageData} />\r\n        <PreviewPostList posts={edges} />\r\n      </PageTemplate>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const getIndexData = graphql`\r\n  query getIndexData {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }, limit: 5) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(transformOptions: { fit: OUTSIDE }, width: 65, height: 65)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 160, height: 160)\r\n      }\r\n      publicURL\r\n    }\r\n  }\r\n`\r\n"],"names":["ProfileImageWrapper","GatsbyImage","profileImage","image","alt","IntroductionWrapper","SubTitle","Title","PreviewPostItemWrapper","Link","Thumbnail","PostItemContent","Category","CategoryItem","title","categories","gatsbyImageData","thumbnail","childImageSharp","link","to","map","category","key","PreviewPostListWrapper","PreviewPostListContent","Blog","PreviewTitle","posts","node","id","slug","fields","frontmatter","data","edges","allMarkdownRemark","file","publicURL","useSiteMetadata","description","siteUrl","Layout","url","PageTemplate"],"sourceRoot":""}