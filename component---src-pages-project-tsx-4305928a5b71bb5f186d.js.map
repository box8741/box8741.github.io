{"version":3,"file":"component---src-pages-project-tsx-4305928a5b71bb5f186d.js","mappings":"2IAKA,IAAMA,GAAe,iKAWfC,GAAY,0LAmBlB,IARmD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpD,OACE,QAACF,EAAD,MACE,QAACC,EAAD,KAAeC,M,6CC3BrB,IAAMC,GAAY,kMAYZC,GAAS,4JAmBf,IARiC,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAClC,OACE,QAACC,EAAD,MACE,QAACC,EAAD,KAAYF,M,gKCjBlB,IAAMG,GAAgB,sJAQhBC,GAAY,OAAOC,EAAAA,EAAP,sBAAH,uEAMTC,GAAK,8KAWLC,GAAW,sPAYXC,GAAyB,OAAOC,EAAAA,GAAP,sBAAH,6DAKhBH,EALgB,yBAQhBF,EARgB,2BAiC5B,EApByD,SAAC,GAQnD,IAAD,IAPJM,KACEC,EAME,EANFA,KACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,YACaC,EAGX,EAHFC,UAAaD,gBAEfE,EACI,EADJA,MAEA,OACE,QAACR,EAAD,CAAwBS,GAAE,YAAcN,EAAd,IAAsBK,IAC9C,QAACb,EAAD,MACE,QAACC,EAAD,CAAWc,MAAOJ,EAAiBK,IAAI,gBAEzC,QAAC,EAAD,KAAQP,IACR,QAACL,EAAD,KAAcM,KCpEpB,IAAMO,GAAkB,8SA2BxB,EAVyD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1D,OACE,QAACD,EAAD,KACGC,EAAKC,KAAI,WAAWN,GAAX,IAAGO,EAAH,EAAGA,KAAH,OACR,QAACC,EAAD,CAAad,KAAMa,EAAME,IAAKF,EAAKG,GAAIV,MAAOA,SCrBhDW,EAAgB,CACpBf,MAAO,0BACPC,YAAa,SAoCf,EAnByD,SAAC,GAOnD,IANOe,EAMR,EANJC,SAAYD,KAMR,IALJlB,KACEoB,EAIE,EAJFA,QACAC,EAGE,EAHFA,QACQC,EAEN,EAFFC,KAAQD,UAGV,OACE,QAACE,EAAA,GAAD,UAAYP,EAAZ,CAA2BT,MAAOc,EAAWG,IAAKP,KAChD,QAACtB,EAAA,EAAD,iBACA,QAAC8B,EAAA,EAAD,aACA,QAAC,EAAD,CAAaf,KAAMS,EAAQO,SAC3B,QAACD,EAAA,EAAD,aACA,QAAC,EAAD,CAAaf,KAAMU,EAAQM","sources":["webpack://min-blog/./src/components/Common/SubTitle.tsx","webpack://min-blog/./src/components/Common/Title.tsx","webpack://min-blog/./src/components/Main/ProjectItem.tsx","webpack://min-blog/./src/components/Main/ProjectList.tsx","webpack://min-blog/./src/pages/project.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\ntype SubTitleProps = {}\r\n\r\nconst SubTitleWrapper = styled.div`\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitleText = styled.span`\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  border-bottom: 3px solid black;\r\n  padding-bottom: 4px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 28px;\r\n  }\r\n`\r\n\r\nconst SubTitle: FunctionComponent<SubTitleProps> = ({ children }) => {\r\n  return (\r\n    <SubTitleWrapper>\r\n      <SubTitleText>{children}</SubTitleText>\r\n    </SubTitleWrapper>\r\n  )\r\n}\r\n\r\nexport default SubTitle\r\n","import { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  width: 768px;\r\n  margin: 60px auto 40px auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    margin: 40px auto 20px auto;\r\n  }\r\n`\r\n\r\nconst TitleText = styled.span`\r\n  left: 12px;\r\n  font-size: 80px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 60px;\r\n    left: 32px;\r\n  }\r\n`\r\n\r\nconst Title: FunctionComponent = ({ children }) => {\r\n  return (\r\n    <TitleWrapper>\r\n      <TitleText>{children}</TitleText>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { ProjectListItemType } from 'types/ProjectItem.types'\r\n\r\ntype ProjectListProps = {\r\n  data: ProjectListItemType['node']\r\n  index: number\r\n}\r\n\r\nconst ThumbnailWrapper = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  box-shadow: 2px 2px 8px #888888;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Thumbnail = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 200px;\r\n  transition: 0.2s ease;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-top: 14px;\r\n  transition: 0.2s ease;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst Description = styled.span`\r\n  display: -webkit-box;\r\n  font-size: 15px;\r\n  margin-top: 2px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow-wrap: break-word;\r\n  transition: 0.2s ease;\r\n`\r\n\r\nconst ProjectListItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n\r\n  &:hover ${Title} {\r\n    opacity: 0.4;\r\n  }\r\n  &:hover ${Thumbnail} {\r\n    transform: scale(1.1);\r\n  }\r\n`\r\n\r\nconst ProjectList: FunctionComponent<ProjectListProps> = ({\r\n  data: {\r\n    type,\r\n    title,\r\n    description,\r\n    thumbnail: { gatsbyImageData },\r\n  },\r\n  index,\r\n}) => {\r\n  return (\r\n    <ProjectListItemWrapper to={`/project/${type}_${index}`}>\r\n      <ThumbnailWrapper>\r\n        <Thumbnail image={gatsbyImageData} alt=\"thumbnail\" />\r\n      </ThumbnailWrapper>\r\n      <Title>{title}</Title>\r\n      <Description>{description}</Description>\r\n    </ProjectListItemWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport ProjectItem from 'components/Main/ProjectItem'\r\nimport { ProjectListItemType } from 'types/ProjectItem.types'\r\n\r\ntype ProjectListProps = {\r\n  list: ProjectListItemType[]\r\n}\r\n\r\nconst ProjectListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 36px;\r\n  grid-row-gap: 50px;\r\n  width: 768px;\r\n  margin: 0 auto 80px auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    grid-template-columns: 1fr;\r\n    grid-column-gap: 0;\r\n    grid-row-gap: 60px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst ProjectList: FunctionComponent<ProjectListProps> = ({ list }) => {\r\n  return (\r\n    <ProjectListWrapper>\r\n      {list.map(({ node }, index) => (\r\n        <ProjectItem data={node} key={node.id} index={index} />\r\n      ))}\r\n    </ProjectListWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql, PageProps } from 'gatsby'\r\nimport Layout from 'components/Common/Layout'\r\nimport Title from 'components/Common/Title'\r\nimport SubTitle from 'components/Common/SubTitle'\r\nimport ProjectList from 'components/Main/ProjectList'\r\n\r\nimport { ProjectListItemType } from 'types/ProjectItem.types'\r\n\r\nconst PAGE_METADATA = {\r\n  title: 'Developer Min | Project',\r\n  description: '포트폴리오',\r\n}\r\n\r\ntype ProjectPageProps = PageProps & {\r\n  data: {\r\n    appList: {\r\n      edges: ProjectListItemType[]\r\n    }\r\n    webList: {\r\n      edges: ProjectListItemType[]\r\n    }\r\n    file: {\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nconst ProjectPage: FunctionComponent<ProjectPageProps> = ({\r\n  location: { href },\r\n  data: {\r\n    appList,\r\n    webList,\r\n    file: { publicURL },\r\n  },\r\n}) => {\r\n  return (\r\n    <Layout {...PAGE_METADATA} image={publicURL} url={href}>\r\n      <Title>Project</Title>\r\n      <SubTitle>App</SubTitle>\r\n      <ProjectList list={appList.edges} />\r\n      <SubTitle>Web</SubTitle>\r\n      <ProjectList list={webList.edges} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ProjectPage\r\n\r\nexport const getProjectData = graphql`\r\n  fragment ProjectData on ProjectMetaData {\r\n    id\r\n    type\r\n    title\r\n    content\r\n    period\r\n    description\r\n    thumbnail {\r\n      gatsbyImageData(width: 300, height: 200, transformOptions: { fit: OUTSIDE })\r\n    }\r\n  }\r\n\r\n  query getProjectData {\r\n    appList: allProjectMetaData(filter: { type: { eq: \"app\" } }) {\r\n      edges {\r\n        node {\r\n          ...ProjectData\r\n        }\r\n      }\r\n    }\r\n\r\n    webList: allProjectMetaData(filter: { type: { eq: \"web\" } }) {\r\n      edges {\r\n        node {\r\n          ...ProjectData\r\n        }\r\n      }\r\n    }\r\n\r\n    file(name: { eq: \"profile-image\" }) {\r\n      publicURL\r\n    }\r\n  }\r\n`\r\n"],"names":["SubTitleWrapper","SubTitleText","children","TitleWrapper","TitleText","ThumbnailWrapper","Thumbnail","GatsbyImage","Title","Description","ProjectListItemWrapper","Link","data","type","title","description","gatsbyImageData","thumbnail","index","to","image","alt","ProjectListWrapper","list","map","node","ProjectItem","key","id","PAGE_METADATA","href","location","appList","webList","publicURL","file","Layout","url","SubTitle","edges"],"sourceRoot":""}